{"ast":null,"code":"const API_URL = \"http://localhost:8000\";\n\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n}\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fectchedLaunches = await response.json();\n  return fectchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (error) {\n    return {\n      ok: false,\n      message: error.message\n    };\n  }\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["D:/HCMUTE/HK1-2023-2034/New_Tech/HW_NewTech/Nasa_20110383/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","response","fetch","json","httpGetLaunches","fectchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","error","ok","message","httpAbortLaunch","id"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;;AACA,eAAeC,cAAf,GAAgC;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,UAAZ,CAA5B;AACA,SAAO,MAAME,QAAQ,CAACE,IAAT,EAAb;AACD;;AAED,eAAeC,eAAf,GAAiC;AAC/B,QAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,CAA5B;AACA,QAAMM,gBAAgB,GAAG,MAAMJ,QAAQ,CAACE,IAAT,EAA/B;AACA,SAAOE,gBAAgB,CAACC,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrC,WAAOD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;AACD,GAFM,CAAP;AAGD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;AACtC,MAAI;AACF,WAAO,MAAMT,KAAK,CAAE,GAAEH,OAAQ,WAAZ,EAAwB;AACxCa,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF+B;AAKxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALkC,KAAxB,CAAlB;AAOD,GARD,CAQE,OAAOM,KAAP,EAAc;AACd,WAAO;AAAEC,MAAAA,EAAE,EAAE,KAAN;AAAaC,MAAAA,OAAO,EAAEF,KAAK,CAACE;AAA5B,KAAP;AACD;AACF;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SAASrB,cAAT,EAAyBI,eAAzB,EAA0CM,gBAA1C,EAA4DU,eAA5D","sourcesContent":["const API_URL = \"http://localhost:8000\";\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n}\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fectchedLaunches = await response.json();\n  return fectchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(launch),\n    });\n  } catch (error) {\n    return { ok: false, message: error.message };\n  }\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}